// Code generated by MockGen. DO NOT EDIT.
// Source: article_service.go

// Package mock_application is a generated GoMock package.
package mock_application

import (
	v1req "article-service/dto/request/v1_req"
	model "article-service/model"
	context "context"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	uuid "github.com/google/uuid"
)

// MockIArticleService is a mock of IArticleService interface.
type MockIArticleService struct {
	ctrl     *gomock.Controller
	recorder *MockIArticleServiceMockRecorder
}

// MockIArticleServiceMockRecorder is the mock recorder for MockIArticleService.
type MockIArticleServiceMockRecorder struct {
	mock *MockIArticleService
}

// NewMockIArticleService creates a new mock instance.
func NewMockIArticleService(ctrl *gomock.Controller) *MockIArticleService {
	mock := &MockIArticleService{ctrl: ctrl}
	mock.recorder = &MockIArticleServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIArticleService) EXPECT() *MockIArticleServiceMockRecorder {
	return m.recorder
}

// CreateArticle mocks base method.
func (m *MockIArticleService) CreateArticle(ctx context.Context, dto v1req.CreateArticleDTO) (uuid.UUID, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "CreateArticle", ctx, dto)
	ret0, _ := ret[0].(uuid.UUID)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// CreateArticle indicates an expected call of CreateArticle.
func (mr *MockIArticleServiceMockRecorder) CreateArticle(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "CreateArticle", reflect.TypeOf((*MockIArticleService)(nil).CreateArticle), ctx, dto)
}

// ListArticles mocks base method.
func (m *MockIArticleService) ListArticles(ctx context.Context, dto v1req.ListArticlesDTO) ([]*model.Article, int64, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "ListArticles", ctx, dto)
	ret0, _ := ret[0].([]*model.Article)
	ret1, _ := ret[1].(int64)
	ret2, _ := ret[2].(error)
	return ret0, ret1, ret2
}

// ListArticles indicates an expected call of ListArticles.
func (mr *MockIArticleServiceMockRecorder) ListArticles(ctx, dto interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "ListArticles", reflect.TypeOf((*MockIArticleService)(nil).ListArticles), ctx, dto)
}
